apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId "com.fasteque.rxbackup"
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode 2
        versionName "0.2"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debugLeakCanaryNoOp.initWith(buildTypes.debug)
        debugLeakCanaryNoOp {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    def appDebugMinifiedDependencies = rootProject.ext.appDebugMinifiedDependencies
    def appReleaseDependencies = rootProject.ext.appReleaseDependencies

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile appDependencies.appCompat
    compile appDependencies.recyclerView
    compile appDependencies.cardView
    compile appDependencies.design
    compile appDependencies.customTabs

    compile appDependencies.rxandroid
    compile appDependencies.butterknife

    apt appDependencies.daggerCompiler
    compile appDependencies.dagger
    compile appDependencies.javaxAnnotation

    debugCompile appDependencies.leakCanary
    debugLeakCanaryNoOpCompile appDebugMinifiedDependencies.leakCanaryNoOp
    releaseCompile appReleaseDependencies.leakCanaryNoOp
}
